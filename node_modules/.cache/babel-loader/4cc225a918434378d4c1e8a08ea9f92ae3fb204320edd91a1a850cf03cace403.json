{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Desktop\\\\CodeHTML\\\\IHNMAIMS - Site\\\\frontend\\\\src\\\\components\\\\SecretContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// SecretContext.js\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecretContext = /*#__PURE__*/createContext();\nconst initialSecret = {\n  id: 1,\n  text: 'La raison de la folie de AM',\n  found: false\n};\nexport const SecretProvider = ({\n  children\n}) => {\n  _s();\n  const [secret, setSecret] = useState(initialSecret);\n  const revealSecret = id => {\n    if (id === secret.id) {\n      setSecret(prevSecret => ({\n        ...prevSecret,\n        found: true\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SecretContext.Provider, {\n    value: {\n      secret,\n      revealSecret\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(SecretProvider, \"PSwhBV04q6sg1v0N8tvATI6yl/g=\");\n_c = SecretProvider;\nexport const useSecret = () => {\n  _s2();\n  const context = useContext(SecretContext);\n  if (!context) {\n    throw new Error('useSecret must be used within a SecretProvider');\n  }\n  return context;\n};\n_s2(useSecret, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SecretProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","SecretContext","initialSecret","id","text","found","SecretProvider","children","_s","secret","setSecret","revealSecret","prevSecret","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSecret","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/louis/Desktop/CodeHTML/IHNMAIMS - Site/frontend/src/components/SecretContext.js"],"sourcesContent":["// SecretContext.js\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\nconst SecretContext = createContext();\r\n\r\nconst initialSecret = {\r\n  id: 1,\r\n  text: 'La raison de la folie de AM',\r\n  found: false,\r\n};\r\n\r\nexport const SecretProvider = ({ children }) => {\r\n  const [secret, setSecret] = useState(initialSecret);\r\n\r\n  const revealSecret = (id) => {\r\n    if (id === secret.id) {\r\n      setSecret((prevSecret) => ({ ...prevSecret, found: true }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SecretContext.Provider value={{ secret, revealSecret }}>\r\n      {children}\r\n    </SecretContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSecret = () => {\r\n  const context = useContext(SecretContext);\r\n  if (!context) {\r\n    throw new Error('useSecret must be used within a SecretProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAErC,MAAMM,aAAa,GAAG;EACpBC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,6BAA6B;EACnCC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAACK,aAAa,CAAC;EAEnD,MAAMS,YAAY,GAAIR,EAAE,IAAK;IAC3B,IAAIA,EAAE,KAAKM,MAAM,CAACN,EAAE,EAAE;MACpBO,SAAS,CAAEE,UAAU,KAAM;QAAE,GAAGA,UAAU;QAAEP,KAAK,EAAE;MAAK,CAAC,CAAC,CAAC;IAC7D;EACF,CAAC;EAED,oBACEL,OAAA,CAACC,aAAa,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEL,MAAM;MAAEE;IAAa,CAAE;IAAAJ,QAAA,EACrDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACV,EAAA,CAdWF,cAAc;AAAAa,EAAA,GAAdb,cAAc;AAgB3B,OAAO,MAAMc,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAGxB,UAAU,CAACG,aAAa,CAAC;EACzC,IAAI,CAACqB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}