{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Desktop\\\\CodeHTML\\\\IHNMAIMS - Site\\\\frontend\\\\src\\\\components\\\\SecretContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// SecretContext.js\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecretContext = /*#__PURE__*/createContext();\nexport const SecretProvider = ({\n  children\n}) => {\n  _s();\n  // Utiliser un objet pour stocker les secrets\n  const [secrets, setSecrets] = useState({});\n\n  // Fonction pour définir un secret spécifique\n  const setSecret = (key, value) => {\n    setSecrets(prevSecrets => ({\n      ...prevSecrets,\n      [key]: value\n    }));\n  };\n\n  // Fonction pour obtenir la valeur d'un secret spécifique\n  const getSecret = key => {\n    return secrets[key];\n  };\n  return /*#__PURE__*/_jsxDEV(SecretContext.Provider, {\n    value: {\n      setSecret,\n      getSecret\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(SecretProvider, \"jTqe6lTGtOKvBObbQMmslTRTw54=\");\n_c = SecretProvider;\nexport const useSecret = () => {\n  _s2();\n  const context = useContext(SecretContext);\n  if (!context) {\n    throw new Error('useSecret must be used within a SecretProvider');\n  }\n  return context;\n};\n_s2(useSecret, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SecretProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","SecretContext","SecretProvider","children","_s","secrets","setSecrets","setSecret","key","value","prevSecrets","getSecret","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSecret","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/louis/Desktop/CodeHTML/IHNMAIMS - Site/frontend/src/components/SecretContext.js"],"sourcesContent":["// SecretContext.js\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\nconst SecretContext = createContext();\r\n\r\nexport const SecretProvider = ({ children }) => {\r\n  // Utiliser un objet pour stocker les secrets\r\n  const [secrets, setSecrets] = useState({});\r\n\r\n  // Fonction pour définir un secret spécifique\r\n  const setSecret = (key, value) => {\r\n    setSecrets(prevSecrets => ({ ...prevSecrets, [key]: value }));\r\n  };\r\n\r\n  // Fonction pour obtenir la valeur d'un secret spécifique\r\n  const getSecret = (key) => {\r\n    return secrets[key];\r\n  };\r\n\r\n  return (\r\n    <SecretContext.Provider value={{ setSecret, getSecret }}>\r\n      {children}\r\n    </SecretContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSecret = () => {\r\n  const context = useContext(SecretContext);\r\n  if (!context) {\r\n    throw new Error('useSecret must be used within a SecretProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMU,SAAS,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;IAChCH,UAAU,CAACI,WAAW,KAAK;MAAE,GAAGA,WAAW;MAAE,CAACF,GAAG,GAAGC;IAAM,CAAC,CAAC,CAAC;EAC/D,CAAC;;EAED;EACA,MAAME,SAAS,GAAIH,GAAG,IAAK;IACzB,OAAOH,OAAO,CAACG,GAAG,CAAC;EACrB,CAAC;EAED,oBACER,OAAA,CAACC,aAAa,CAACW,QAAQ;IAACH,KAAK,EAAE;MAAEF,SAAS;MAAEI;IAAU,CAAE;IAAAR,QAAA,EACrDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACZ,EAAA,CAnBWF,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAqB3B,OAAO,MAAMgB,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAGtB,UAAU,CAACG,aAAa,CAAC;EACzC,IAAI,CAACmB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}