{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Desktop\\\\CodeHTML\\\\IHNMAIMS - Site\\\\frontend\\\\src\\\\components\\\\SecretContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// SecretContext.js\nimport React, { createContext, useState, useContext } from 'react';\n\n// Création du contexte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecretContext = /*#__PURE__*/createContext();\n\n// Fournisseur de contexte\nexport function SecretProvider({\n  children\n}) {\n  _s();\n  const [secrets, setSecrets] = useState({\n    AM: false\n  });\n  const revelSecret = name => {\n    setSecrets(prevSecrets => ({\n      ...prevSecrets,\n      [name]: true\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(SecretContext.Provider, {\n    value: {\n      secrets,\n      revelSecret\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n// Hook personnalisé pour utiliser le contexte\n_s(SecretProvider, \"HgOMHFFhtjtmnO7KI6Leg1LNyNY=\");\n_c = SecretProvider;\nexport function useSecret() {\n  _s2();\n  return useContext(SecretContext);\n}\n_s2(useSecret, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SecretProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","SecretContext","SecretProvider","children","_s","secrets","setSecrets","AM","revelSecret","name","prevSecrets","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSecret","_s2","$RefreshReg$"],"sources":["C:/Users/louis/Desktop/CodeHTML/IHNMAIMS - Site/frontend/src/components/SecretContext.js"],"sourcesContent":["// SecretContext.js\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\n// Création du contexte\r\nconst SecretContext = createContext();\r\n\r\n// Fournisseur de contexte\r\nexport function SecretProvider({ children }) {\r\n  const [secrets, setSecrets] = useState({\r\n    AM: false,\r\n  });\r\n\r\n  const revelSecret = (name) => {\r\n    setSecrets(prevSecrets => ({ ...prevSecrets, [name]: true }));\r\n  };\r\n\r\n  return (\r\n    <SecretContext.Provider value={{ secrets, revelSecret }}>\r\n      {children}\r\n    </SecretContext.Provider>\r\n  );\r\n}\r\n\r\n// Hook personnalisé pour utiliser le contexte\r\nexport function useSecret() {\r\n  return useContext(SecretContext);\r\n}\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;;AAErC;AACA,OAAO,SAASM,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC;IACrCU,EAAE,EAAE;EACN,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAIC,IAAI,IAAK;IAC5BH,UAAU,CAACI,WAAW,KAAK;MAAE,GAAGA,WAAW;MAAE,CAACD,IAAI,GAAG;IAAK,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,oBACET,OAAA,CAACC,aAAa,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEP,OAAO;MAAEG;IAAY,CAAE;IAAAL,QAAA,EACrDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B;;AAEA;AAAAZ,EAAA,CAhBgBF,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAiB9B,OAAO,SAASgB,SAASA,CAAA,EAAG;EAAAC,GAAA;EAC1B,OAAOrB,UAAU,CAACG,aAAa,CAAC;AAClC;AAACkB,GAAA,CAFeD,SAAS;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}