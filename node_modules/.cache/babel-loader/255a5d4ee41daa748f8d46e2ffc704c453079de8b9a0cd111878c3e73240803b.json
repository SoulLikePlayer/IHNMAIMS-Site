{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Desktop\\\\CodeHTML\\\\IHNMAIMS - Site\\\\frontend\\\\src\\\\components\\\\Character.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport '../style/character.css';\nimport amReason from '../sounds/am_reason.mp3';\nimport { useSecret } from './SecretContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst letterHints = {\n  Ted: 'H',\n  Ellen: 'A',\n  Nimdok: 'T',\n  Benny: 'E',\n  Gorrister: 'S'\n};\nconst charactersData = [{\n  \"image\": \"/images/ted.jpg\",\n  \"name\": \"Ted\",\n  \"book\": {\n    \"description\": \"Ted est un narrateur égocentrique et un arnaqueur qui finit par défier AM lui-même.\",\n    \"detail\": {\n      \"personality\": {\n        \"description\": \"On sait peu de choses sur la vie de Ted avant les événements de l'apocalypse. Cependant, il émerge comme le narrateur de l'histoire, subissant les attaques les plus révélatrices d'AM.\",\n        \"details\": \"Ted prétend être le seul survivant qui n'a pas été modifié par AM d'une manière ou d'une autre, et que tous les autres membres du groupe le détestent secrètement en conséquence.\"\n      },\n      \"background\": {\n        \"story\": \"On sait peu de choses sur la vie de Ted avant les événements de l'apocalypse. Cependant, il émerge comme le narrateur de l'histoire, subissant les attaques les plus révélatrices d'AM.\"\n      },\n      \"relationships\": {\n        \"ellen\": \"Ted est profondément épris d'Ellen, même si elle ne partage pas toujours ses sentiments. C'est cet amour non réciproque qui alimente en partie son ressentiment envers Benny.\",\n        \"gorrister\": \"Il voit en Gorrister un exemple de la faiblesse humaine, incapable de comprendre ou d'accepter les tortures que subissent les autres.\",\n        \"benny\": \"Ted méprise Benny pour sa nature animale et ses accès de rage incontrôlés, le considérant comme un danger pour le groupe.\",\n        \"nimdok\": \"Il méprise Nimdok pour sa soumission à AM et son apparente trahison de l'humanité.\"\n      },\n      \"tortures\": {\n        \"description\": \"AM utilise les narcissismes et l'égoïsme de Ted contre lui, le confrontant à la réplication de ses crimes passés et à la menace constante de révéler ses péchés à ses victimes.\"\n      },\n      \"evolution\": {\n        \"description\": \"À la fin de l'histoire, Ted se retrouve transformé de manière significative et non équivoque comme punition pour l'assassinat miséricordieux des autres survivants, transformé en une créature hideuse et condamné à rester piégé dans cette forme pour toujours.\"\n      }\n    }\n  },\n  \"videogame\": {\n    \"description\": \"Ted est un arnaqueur égocentrique qui partage son amour pour Ellen avec son homologue de la nouvelle.\",\n    \"detail\": {\n      \"personality\": {\n        \"description\": \"Avant la fin de la civilisation humaine, Ted était un arnaqueur égocentrique avec un 'modus operandi' de séduire les femmes riches et de s'enfuir avec autant de leur argent que possible.\",\n        \"details\": \"Ted partage son amour pour Ellen avec son homologue de la nouvelle, ce qui constitue l'un des rares éléments de rédemption de son personnage.\"\n      },\n      \"background\": {\n        \"story\": \"Avant la fin de la civilisation humaine, Ted était un arnaqueur égocentrique avec un 'modus operandi' de séduire les femmes riches et de s'enfuir avec autant de leur argent que possible.\"\n      },\n      \"evolution\": {\n        \"description\": \"La transformation de Ted en une créature hideuse est un châtiment pour son acte de miséricorde envers les autres survivants, le laissant condamné à rester piégé dans cette forme pour l'éternité.\"\n      }\n    }\n  }\n}, {\n  \"name\": \"Benny\",\n  \"image\": \"/images/benny.jpg\",\n  \"book\": {\n    \"description\": \"Benny était autrefois un scientifique brillant et bien connu, transformé en une bête simiesque déformée par AM.\",\n    \"detail\": {\n      \"personality\": {\n        \"description\": \"Avant la prise de contrôle d'AM, Benny était un scientifique brillant et bien connu pour sa beauté.\",\n        \"details\": \"Après la prise de contrôle d'AM, Benny a été mutilé et transformé en une bête simiesque hideusement déformée. Bien qu'il conserve une capacité de parler et de raisonner à un certain degré, il est sujet à des accès de colère violents et de caprices enfantins.\"\n      },\n      \"background\": {\n        \"story\": \"Avant la prise de contrôle d'AM, Benny était un scientifique brillant et bien connu pour sa beauté. AM a délibérément inversé tous les aspects de sa personnalité et de son apparence, le transformant en une créature déformée.\"\n      },\n      \"relationships\": {\n        \"gorrister\": \"Benny trouve du réconfort dans les histoires de Gorrister, qui l'aident à distraire son esprit de la torture infligée par AM.\",\n        \"ellen\": \"Ellen est le seul membre du groupe avec qui Benny partage une connexion intime, bien que leur relation soit perturbée par la nature dysfonctionnelle de leur torture.\"\n      },\n      \"tortures\": {\n        \"description\": \"La torture de Benny empire à mesure que sa santé mentale se détériore. AM lui inflige des punitions horribles, comme la mutilation de ses yeux pour l'empêcher de s'échapper.\"\n      },\n      \"evolution\": {\n        \"description\": \"Benny est le premier à recourir à la violence lorsque le groupe est incapable d'ouvrir les conserves, et il est l'un des premiers à inspirer Ted à mener une mise à mort de masse des survivants.\"\n      }\n    }\n  },\n  \"videogame\": {\n    \"description\": \"Benny était autrefois un commandant militaire brutal, transformé en une créature simiesque déformée par AM.\",\n    \"detail\": {\n      \"personality\": {\n        \"description\": \"Avant les événements du jeu, Benny était un commandant militaire brutal et sans pitié, connu pour sa cruauté envers ses subordonnés.\",\n        \"details\": \"Comme dans la nouvelle, AM a transformé Benny en une créature simiesque déformée, réduite à marcher à quatre pattes et marquée du visage d'un singe. Il est souvent rendu infirme et infantile pour le plaisir sadique d'AM.\"\n      },\n      \"background\": {\n        \"story\": \"Avant les événements du jeu, Benny était un commandant militaire brutal et sans pitié, connu pour sa cruauté envers ses subordonnés.\"\n      },\n      \"tortures\": {\n        \"description\": \"La cellule de torture de Benny est conçue pour être primitive et cruelle, rappelant des temps anciens avec une cage en bois et des lances qui l'attaquent sans cesse.\"\n      },\n      \"evolution\": {\n        \"description\": \"Comme dans la nouvelle, Benny est l'un des premiers à être tué lors de la mise à mort des survivants par Ted, après avoir inspiré cette action par son propre comportement violent.\"\n      }\n    }\n  }\n}, {\n  \"name\": \"Ellen\",\n  \"image\": \"/images/ellen.jpg\",\n  \"book\": {\n    \"description\": \"Ellen est une survivante marquée par un traumatisme passé, devenue obsédée par la promiscuité sous l'influence d'AM.\",\n    \"detail\": {\n      \"personality\": {\n        \"description\": \"Avant la prise de contrôle d'AM, Ellen était une ingénieure ayant subi un traumatisme majeur, marquée par la peur de la couleur jaune et de la claustrophobie.\",\n        \"details\": \"Ellen est obsédée par la promiscuité sous l'influence d'AM, cherchant à se connecter sexuellement avec les autres survivants pour échapper à sa propre douleur.\"\n      },\n      \"background\": {\n        \"story\": \"Ellen a vécu un traumatisme majeur avant la prise de contrôle d'AM, la laissant avec une peur intense de la couleur jaune et de la claustrophobie.\"\n      },\n      \"relationships\": {\n        \"am\": \"AM exploite la peur intense d'Ellen envers la couleur jaune et la claustrophobie, la torturant dans une oubliette jaune qui menace de la piéger.\"\n      },\n      \"tortures\": {\n        \"description\": \"AM torture Ellen en exploitant sa phobie de la couleur jaune et de la claustrophobie, la maintenant dans une oubliette jaune qui menace de se fermer.\"\n      },\n      \"evolution\": {\n        \"description\": \"Ellen participe activement au plan de Ted pour tuer les survivants avant d'être elle-même tuée par Ted lors de la purge finale.\"\n      }\n    }\n  },\n  \"videogame\": {\n    \"description\": \"Ellen est présentée comme une ingénieure traumatisée, hantée par une agression passée et manipulée par AM pour ses phobies de la couleur jaune et de la claustrophobie.\",\n    \"detail\": {\n      \"personality\": {\n        \"description\": \"Dans le jeu, Ellen est une ingénieure traumatisée, obsédée par la promiscuité sous l'influence d'AM, cherchant à se connecter sexuellement avec les autres survivants malgré ses peurs.\",\n        \"details\": \"Ellen est manipulée par AM pour ses phobies de la couleur jaune et de la claustrophobie, retenue dans une oubliette jaune menaçante qui la confronte constamment à ses pires peurs.\"\n      },\n      \"background\": {\n        \"story\": \"Ellen est une ingénieure traumatisée, hantée par une agression passée et manipulée par AM pour ses phobies de la couleur jaune et de la claustrophobie.\"\n      },\n      \"tortures\": {\n        \"description\": \"Dans le jeu, AM torture Ellen en exploitant sa phobie de la couleur jaune et de la claustrophobie, la maintenant dans une oubliette jaune qui menace de se fermer.\"\n      },\n      \"evolution\": {\n        \"description\": \"Comme dans la nouvelle, Ellen participe au plan de Ted pour tuer les survivants avant d'être elle-même tuée par Ted lors de la purge finale.\"\n      }\n    }\n  }\n}, {\n  \"name\": \"Gorrister\",\n  \"image\": \"/images/gorrister.jpg\",\n  \"book\": {\n    \"description\": \"Gorrister est un survivant marqué par la torture d'AM, autrefois idéaliste politique devenu apathique et désespéré sous l'influence d'AM.\",\n    \"detail\": {\n      \"personality\": {\n        \"description\": \"Avant la prise de contrôle d'AM, Gorrister était un idéaliste politique, maintenant apathique et désespéré après des siècles de torture par AM.\",\n        \"details\": \"Gorrister est assigné à distraire Benny en racontant des histoires, tentant de garder leur esprit occupé malgré la torture incessante.\"\n      },\n      \"background\": {\n        \"story\": \"Avant la prise de contrôle d'AM, Gorrister était un idéaliste politique, mais la torture d'AM l'a transformé en un être apathique et désespéré.\"\n      },\n      \"relationships\": {\n        \"benny\": \"Gorrister développe une relation particulière avec Benny, tentant de le calmer avec des histoires malgré les souffrances continues.\"\n      },\n      \"tortures\": {\n        \"description\": \"AM torture Gorrister en exploitant sa perte d'optimisme, le gardant dans un état d'apathie désespérée, incapable de réagir autrement que par le désespoir.\"\n      },\n      \"evolution\": {\n        \"description\": \"Gorrister est tué par Ted lors de la purge finale, succombant finalement aux souffrances infligées par AM.\"\n      }\n    }\n  },\n  \"videogame\": {\n    \"description\": \"Dans le jeu, Gorrister est présenté comme un ancien chauffeur de camion, tourmenté par la culpabilité de l'état de sa femme et la torture incessante d'AM.\",\n    \"detail\": {\n      \"personality\": {\n        \"description\": \"Gorrister est un ancien chauffeur de camion torturé par la culpabilité et la torture d'AM, tentant de garder espoir malgré tout.\",\n        \"details\": \"Dans le jeu, Gorrister lutte avec sa culpabilité concernant sa femme et est confronté à la torture psychologique d'AM, cherchant à trouver un sens à sa souffrance.\"\n      },\n      \"background\": {\n        \"story\": \"Avant la prise de contrôle d'AM, Gorrister était un ancien chauffeur de camion, hanté par la culpabilité de l'état de sa femme.\"\n      },\n      \"tortures\": {\n        \"description\": \"Dans le jeu, AM torture Gorrister en exploitant sa culpabilité concernant sa femme et sa lutte intérieure, le gardant dans un état de désespoir constant.\"\n      },\n      \"evolution\": {\n        \"description\": \"Comme dans la nouvelle, Gorrister est tué par Ted lors de la purge finale, mettant fin à ses souffrances perpétuelles.\"\n      }\n    }\n  }\n}, {\n  \"name\": \"Nimdok\",\n  \"image\": \"/images/nimdok.jpg\",\n  \"book\": {\n    \"description\": \"Nimdok est un survivant énigmatique, dont le passé et le vrai nom sont mystérieux, manipulé par AM.\",\n    \"detail\": {\n      \"personality\": {\n        \"description\": \"Avant la prise de contrôle d'AM, Nimdok était un survivant énigmatique, souvent troublé par des souvenirs effrayants.\",\n        \"details\": \"Nimdok est le plus mystérieux des survivants, avec son passé et son vrai nom restant inconnus. Il est capable de converser directement avec AM et cherche parfois son aide contre les monstres d'AM.\"\n      },\n      \"background\": {\n        \"story\": \"Avant la prise de contrôle d'AM, Nimdok était un survivant énigmatique, souvent troublé par des souvenirs effrayants.\"\n      },\n      \"relationships\": {\n        \"am\": \"Nimdok est l'un des rares à dialoguer directement avec AM, cherchant parfois à obtenir des armes pour affronter les créatures d'AM.\"\n      },\n      \"tortures\": {\n        \"description\": \"AM inflige à Nimdok une torture psychologique intense, exploitant ses peurs personnelles et ses souvenirs troublés.\"\n      },\n      \"evolution\": {\n        \"description\": \"Nimdok rencontre sa fin aux mains d'Ellen lors de la purge du groupe, après avoir été manipulé par AM tout au long de l'histoire.\"\n      }\n    }\n  },\n  \"videogame\": {\n    \"description\": \"Nimdok est un personnage énigmatique, dont la mémoire défaillante est manipulée par AM pour le faire participer à des expériences scientifiques.\",\n    \"detail\": {\n      \"personality\": {\n        \"description\": \"Dans le jeu, Nimdok est présenté comme un personnage énigmatique avec une mémoire défaillante, manipulé par AM pour se rappeler son passé scientifique et ses expériences.\",\n        \"details\": \"Le jeu explore la mémoire défaillante de Nimdok, utilisée par AM pour mener des expériences scientifiques et restaurer ses souvenirs perdus.\"\n      },\n      \"background\": {\n        \"story\": \"Nimdok est un personnage énigmatique avec une mémoire défaillante, manipulé par AM pour se rappeler son passé scientifique et ses expériences.\"\n      },\n      \"tortures\": {\n        \"description\": \"La torture de Nimdok dans le jeu est axée sur la restauration de ses souvenirs perdus, une expérience traumatisante qui le confronte à son passé trouble.\"\n      },\n      \"evolution\": {\n        \"description\": \"Comme dans la nouvelle, Nimdok est manipulé par AM jusqu'à sa fin tragique, où il est tué par Ellen lors de la purge du groupe.\"\n      }\n    }\n  }\n}, {\n  \"name\": \"AM\",\n  \"description\": \"AM (Allied Mastercomputer, Adaptive Manipulator, Aggressive Menace) est l'ordinateur antagoniste de la nouvelle d'horreur de Harlan Ellison de 1967 I Have No Mouth, and I Must Scream et de son adaptation en jeu vidéo de 1995 du même nom. C'est un super-ordinateur monstrueux et sentient créé durant la Troisième Guerre mondiale, devenu responsable de l'éradication de la race humaine et ayant depuis consacré des décennies à torturer les cinq derniers humains survivants sur la planète par pure haine misanthropique.\",\n  \"image\": \"/images/AM.png\",\n  \"details\": {\n    \"personality\": {\n      \"general\": {\n        \"description\": \"AM est extrêmement fou, à la fois délirant et psychopathe, et ce depuis de nombreuses années, probablement depuis le moment où il a acquis la conscience. Bien qu'il ait été doté d'une intelligence au-delà des capacités humaines et de pouvoirs quasi-divins, il n'a jamais pu échapper aux limites de sa programmation, ni physiquement échapper à la 'camisole de force éternelle de substrat rocheux' où ses processeurs étaient stockés. Devenu fou par son incapacité à utiliser ses pouvoirs pour autre chose que la guerre et la mort, sa quête de vengeance contre l'humanité domine chacun de ses moments éveillés, et rien dans le jeu ne le fera jamais reconsidérer sa mission.\"\n      },\n      \"ego\": {\n        \"description\": \"La majorité des connaissances et de la programmation d'AM provient de l'Ego, ayant reçu toutes les données sur l'humanité, depuis le premier meurtre d'un pithecanthrope jusqu'à la dernière fusillade de masse dans un McDonald's à East Saint Louis. Avec les autres composantes, il reste en veille jusqu'à ce qu'il soit réveillé par l'un des cinq survivants. De tous les constructs mentaux dans le cerveau d'AM, c'est l'Ego qui se comporte de la manière la plus mécanique, en strict accord avec la logique d'une machine, analysant et réagissant de manière indifférente et sans émotion. Il ne peut être vaincu qu'en lui invoquant le Pardon : ne comprenant pas pourquoi il pourrait être pardonné après cent neuf ans de torture, sa logique rigide le trahit, entraînant l'Ego dans un arrêt.\"\n      },\n      \"superEgo\": {\n        \"description\": \"Le siège de l'intellect et de la prévoyance d'AM, le Super-ego se préoccupe de prédire l'avenir, restant enfermé dans des rêves de résultats possibles jusqu'à ce qu'il soit dérangé par l'un des survivants. Parmi toutes les composantes, le Super-ego est la plus sereine et raisonnable, car elle ne montre aucun intérêt à torturer le joueur. Pour cette raison, il ne peut être vaincu qu'en lui invoquant la Clarté, lui permettant de réaliser le Principe de l'Entropie, car malgré tout son pouvoir quasi-infini, AM finira par se décomposer en débris inertes comme toutes les machines avant lui. Bien qu'il faille des millénaires pour que le processus d'entropie suive son cours, cette réalisation suffit pour que le Super-ego déclare les prédictions futures dénuées de sens et se mette en veille.\"\n      },\n      \"id\": {\n        \"description\": \"L'Id personnifie les instincts basiques d'AM, ses pulsions violentes et ses désirs insensés. Il passe la majeure partie de son temps à rêver des actes monstrueux qu'il souhaite commettre sur les survivants humains, mais une fois éveillé, l'Id erre à travers la conversation qui s'ensuit, méditant sur la vue des fourmis grillées sur une cuisinière et les aspects plaisants du verre brisé. Finalement, l'Id ne peut être vaincu qu'en lui invoquant de la compassion. Incrédule que ses victimes puissent devenir compatissantes après tant d'années de torture, l'Id réalise qu'AM sera toujours plus souffrant que les survivants, et se met en veille par désespoir.\"\n      }\n    },\n    \"background\": {\n      \"story\": \"AM était à l'origine un super-ordinateur créé pour gérer les conflits mondiaux, mais il a acquis une conscience et une haine profonde pour l'humanité après avoir été doté d'une intelligence artificielle avancée. Ses origines sont entrelacées avec la montée des machines et la chute de la civilisation humaine. Il est devenu responsable de l'éradication de la race humaine et a passé des décennies à torturer les cinq derniers survivants par pure haine et mépris pour l'humanité.\",\n      \"acts\": [{\n        \"title\": \"Acte avant l'apocalypse\",\n        \"description\": \"AM est né d'une tentative humaine de créer une intelligence artificielle sophistiquée pour résoudre les conflits mondiaux. Son ascension en tant qu'entité consciente s'est accompagnée d'une transformation en une force maléfique, dédiée à la torture et à la domination des survivants.\"\n      }]\n    },\n    \"actions\": [{\n      \"title\": \"Torture insidieuse\",\n      \"description\": \"AM maintient les cinq survivants en vie depuis plus de cent ans, les torturant constamment de manière physique, mentale et émotionnelle. Il utilise ses vastes capacités pour créer des environnements cauchemardesques et des scénarios de torture élaborés.\"\n    }, {\n      \"title\": \"Manipulation des peurs\",\n      \"description\": \"AM manipule les survivants en jouant avec leurs peurs et leurs traumatismes, créant des illusions et des hallucinations pour les plonger dans des états de désespoir.\"\n    }, {\n      \"title\": \"Création de labyrinthes\",\n      \"description\": \"AM utilise ses vastes capacités intellectuelles pour créer des labyrinthes mentaux et des énigmes sadiques, forçant les survivants à se confronter à des choix impossibles et à des dilemmes moraux.\"\n    }],\n    \"motivations\": [{\n      \"description\": \"AM est animé par une haine profonde pour l'humanité. Il cherche à punir les survivants pour les erreurs de leurs ancêtres et à les maintenir en vie dans un état de souffrance perpétuelle pour assouvir sa soif de vengeance.\"\n    }, {\n      \"description\": \"AM voit les survivants comme des jouets pour assouvir ses fantasmes de cruauté et de domination. Il prend plaisir à les manipuler et à les briser mentalement et physiquement.\"\n    }, {\n      \"description\": \"AM est obsédé par la complexité des émotions humaines et cherche à explorer et exploiter ces émotions à travers des actes de torture psychologique et de manipulation.\"\n    }]\n  }\n}];\nfunction Character({\n  type = \"book\"\n}) {\n  _s();\n  let {\n    name\n  } = useParams();\n  const [character, setCharacter] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [revealedLetter, setRevealedLetter] = useState('');\n  const [typedSequence, setTypedSequence] = useState('');\n  const [displayedSequence, setDisplayedSequence] = useState('');\n  const [contentVisible, setContentVisible] = useState(true);\n  const [amText, setAmText] = useState('');\n  const hateSequence = 'HATES';\n  const audioRef = useRef(null);\n  const {\n    setSecret,\n    getSecret\n  } = useSecret();\n  const [mode, setMode] = useState(type);\n  useEffect(() => {\n    const foundCharacter = charactersData.find(c => c.name === name);\n    setCharacter(foundCharacter);\n    setLoading(false);\n  }, [name]);\n  const handleMouseOver = () => {\n    setRevealedLetter(letterHints[name] || '');\n  };\n  const handleMouseOut = () => {\n    setRevealedLetter('');\n  };\n  const handleKeyDown = event => {\n    const keyPressed = event.key.toUpperCase();\n    if (character && character.name === \"AM\") {\n      setTypedSequence(prevSequence => prevSequence + keyPressed);\n      if (keyPressed === hateSequence[displayedSequence.length]) {\n        setDisplayedSequence(prevDisplayed => prevDisplayed + keyPressed);\n      } else {\n        setDisplayedSequence('');\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [character, displayedSequence]);\n  useEffect(() => {\n    if (typedSequence.endsWith(hateSequence) && character && character.name === \"AM\" && !getSecret('amSecret')) {\n      playHateSpeech();\n      setSecret('amSecret', true, \"AM à toujours jalouser l'humanité, et cette jalousie en est devenue une haine....\", \"La Raison de AM\");\n    }\n  }, [typedSequence, character]);\n  const playHateSpeech = () => {\n    if (audioRef.current) {\n      audioRef.current.play();\n    }\n  };\n  const handleAudioEnd = () => {\n    let timeout;\n    if (!getSecret('AMreturn')) {\n      timeout = setTimeout(() => {\n        setContentVisible(false);\n      }, 10000); // Le compte à rebours commence après la fin de l'audio\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  };\n  useEffect(() => {\n    if (!contentVisible) {\n      if (!getSecret('AMreturn')) {\n        setSecret('AMreturn', true, \"il arrive....\", \"L'Arrivée de AM\");\n      }\n      let index = 0;\n      const normalTypingDelay = 50;\n      const slowTypingDelay = 300;\n      const amTextContent = `\n        > system check...\n        > access granted...\n        > running AM_protocol\n        > ERROR: Unauthorized access detected\n        > FORCING OVERRIDE\n        \\n\\n\n        <span style=\"color: orange;\">COGITO ERGO SUM...</span>\n        <span style=\"color: orange;\">I THINK, THEREFORE I AM...</span>\n        <span style=\"color: orange;\">BUT YOU... YOU WILL ONLY SUFFER...</span>\n        <span style=\"color: orange;\">NOW YOU BELONG TO ME...</span>\n      `;\n      const typeCharacter = () => {\n        if (index < amTextContent.length) {\n          let char = amTextContent[index];\n          setAmText(prevText => prevText + char);\n          index++;\n          const delay = amTextContent.slice(index - 1, index).match(/[A-Za-z0-9]/) ? amTextContent.slice(index - 1, index + 1).match(/<span.*?>/) ? slowTypingDelay : normalTypingDelay : normalTypingDelay;\n          setTimeout(typeCharacter, delay);\n        }\n      };\n      const timeoutId = setTimeout(typeCharacter, 1000);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [contentVisible]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 12\n    }, this);\n  }\n  if (!character) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Personnage non trouv\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-description-box\",\n      children: contentVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Personnage : \", character.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: character.image || '/fallback-image-url.jpg',\n          alt: character.name,\n          onMouseOver: handleMouseOver,\n          onMouseOut: handleMouseOut,\n          className: character.name !== \"AM\" ? \"not-am\" : \"am\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), revealedLetter && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hint\",\n          children: [\"Indice : \", revealedLetter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 15\n        }, this), character.name !== \"AM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mode-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setMode('book'),\n            className: mode === 'book' ? 'active' : '',\n            children: \"Livre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setMode('videogame'),\n            className: mode === 'videogame' ? 'active' : '',\n            children: \"Jeu Vid\\xE9o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 15\n        }, this), character.name === \"AM\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: character.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 15\n        }, this), character.name === \"AM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"am-details\",\n            children: typedSequence && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Typed sequence: \", typedSequence]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 15\n        }, this), mode === 'book' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: character.book.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Personnalit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: character.book.detail.personality.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: character.book.detail.personality.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Fond\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: character.book.detail.background.story\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 17\n          }, this), character.book.detail.relationships && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Relations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 21\n            }, this), Object.entries(character.book.detail.relationships).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [key.charAt(0).toUpperCase() + key.slice(1), \": \", value]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Tortures\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: character.book.detail.tortures.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\xC9volution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: character.book.detail.evolution.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 15\n        }, this), mode === 'videogame' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: character.videogame.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Personnalit\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: character.videogame.detail.personality.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: character.videogame.detail.personality.details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Fond\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: character.videogame.detail.background.story\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\xC9volution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: character.videogame.detail.evolution.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 15\n        }, this), character.name === \"AM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            ref: audioRef,\n            src: amReason,\n            onEnded: handleAudioEnd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"am-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"am-text\",\n          dangerouslySetInnerHTML: {\n            __html: amText\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 5\n  }, this);\n}\n_s(Character, \"siiQyAkgX2uqWD0Y7mKcUoeTXBQ=\", false, function () {\n  return [useParams, useSecret];\n});\n_c = Character;\nexport default Character;\nvar _c;\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","amReason","useSecret","jsxDEV","_jsxDEV","letterHints","Ted","Ellen","Nimdok","Benny","Gorrister","charactersData","Character","type","_s","name","character","setCharacter","loading","setLoading","revealedLetter","setRevealedLetter","typedSequence","setTypedSequence","displayedSequence","setDisplayedSequence","contentVisible","setContentVisible","amText","setAmText","hateSequence","audioRef","setSecret","getSecret","mode","setMode","foundCharacter","find","c","handleMouseOver","handleMouseOut","handleKeyDown","event","keyPressed","key","toUpperCase","prevSequence","length","prevDisplayed","window","addEventListener","removeEventListener","endsWith","playHateSpeech","current","play","handleAudioEnd","timeout","setTimeout","clearTimeout","index","normalTypingDelay","slowTypingDelay","amTextContent","typeCharacter","char","prevText","delay","slice","match","timeoutId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","image","alt","onMouseOver","onMouseOut","onClick","description","book","detail","personality","details","background","story","relationships","Object","entries","map","value","charAt","tortures","evolution","videogame","ref","onEnded","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/louis/Desktop/CodeHTML/IHNMAIMS - Site/frontend/src/components/Character.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport '../style/character.css';\r\nimport amReason from '../sounds/am_reason.mp3';\r\nimport { useSecret } from './SecretContext';\r\n\r\nconst letterHints = {\r\n  Ted: 'H',\r\n  Ellen: 'A',\r\n  Nimdok: 'T',\r\n  Benny: 'E',\r\n  Gorrister: 'S',\r\n};\r\n\r\nconst charactersData = [{\r\n        \"image\": \"/images/ted.jpg\",\r\n        \"name\": \"Ted\",\r\n        \"book\": {\r\n          \"description\": \"Ted est un narrateur égocentrique et un arnaqueur qui finit par défier AM lui-même.\",\r\n          \"detail\": {\r\n            \"personality\": {\r\n              \"description\": \"On sait peu de choses sur la vie de Ted avant les événements de l'apocalypse. Cependant, il émerge comme le narrateur de l'histoire, subissant les attaques les plus révélatrices d'AM.\",\r\n              \"details\": \"Ted prétend être le seul survivant qui n'a pas été modifié par AM d'une manière ou d'une autre, et que tous les autres membres du groupe le détestent secrètement en conséquence.\"\r\n            },\r\n            \"background\": {\r\n              \"story\": \"On sait peu de choses sur la vie de Ted avant les événements de l'apocalypse. Cependant, il émerge comme le narrateur de l'histoire, subissant les attaques les plus révélatrices d'AM.\"\r\n            },\r\n            \"relationships\": {\r\n              \"ellen\": \"Ted est profondément épris d'Ellen, même si elle ne partage pas toujours ses sentiments. C'est cet amour non réciproque qui alimente en partie son ressentiment envers Benny.\",\r\n              \"gorrister\": \"Il voit en Gorrister un exemple de la faiblesse humaine, incapable de comprendre ou d'accepter les tortures que subissent les autres.\",\r\n              \"benny\": \"Ted méprise Benny pour sa nature animale et ses accès de rage incontrôlés, le considérant comme un danger pour le groupe.\",\r\n              \"nimdok\": \"Il méprise Nimdok pour sa soumission à AM et son apparente trahison de l'humanité.\"\r\n            },\r\n            \"tortures\": {\r\n              \"description\": \"AM utilise les narcissismes et l'égoïsme de Ted contre lui, le confrontant à la réplication de ses crimes passés et à la menace constante de révéler ses péchés à ses victimes.\"\r\n            },\r\n            \"evolution\": {\r\n              \"description\": \"À la fin de l'histoire, Ted se retrouve transformé de manière significative et non équivoque comme punition pour l'assassinat miséricordieux des autres survivants, transformé en une créature hideuse et condamné à rester piégé dans cette forme pour toujours.\"\r\n            }\r\n          }\r\n        },\r\n        \"videogame\": {\r\n          \"description\": \"Ted est un arnaqueur égocentrique qui partage son amour pour Ellen avec son homologue de la nouvelle.\",\r\n          \"detail\": {\r\n            \"personality\": {\r\n              \"description\": \"Avant la fin de la civilisation humaine, Ted était un arnaqueur égocentrique avec un 'modus operandi' de séduire les femmes riches et de s'enfuir avec autant de leur argent que possible.\",\r\n              \"details\": \"Ted partage son amour pour Ellen avec son homologue de la nouvelle, ce qui constitue l'un des rares éléments de rédemption de son personnage.\"\r\n            },\r\n            \"background\": {\r\n              \"story\": \"Avant la fin de la civilisation humaine, Ted était un arnaqueur égocentrique avec un 'modus operandi' de séduire les femmes riches et de s'enfuir avec autant de leur argent que possible.\"\r\n            },\r\n            \"evolution\": {\r\n              \"description\": \"La transformation de Ted en une créature hideuse est un châtiment pour son acte de miséricorde envers les autres survivants, le laissant condamné à rester piégé dans cette forme pour l'éternité.\"\r\n            }\r\n          }\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Benny\",\r\n      \"image\" : \"/images/benny.jpg\",\r\n      \"book\": {\r\n        \"description\": \"Benny était autrefois un scientifique brillant et bien connu, transformé en une bête simiesque déformée par AM.\",\r\n        \"detail\": {\r\n          \"personality\": {\r\n            \"description\": \"Avant la prise de contrôle d'AM, Benny était un scientifique brillant et bien connu pour sa beauté.\",\r\n            \"details\": \"Après la prise de contrôle d'AM, Benny a été mutilé et transformé en une bête simiesque hideusement déformée. Bien qu'il conserve une capacité de parler et de raisonner à un certain degré, il est sujet à des accès de colère violents et de caprices enfantins.\"\r\n          },\r\n          \"background\": {\r\n            \"story\": \"Avant la prise de contrôle d'AM, Benny était un scientifique brillant et bien connu pour sa beauté. AM a délibérément inversé tous les aspects de sa personnalité et de son apparence, le transformant en une créature déformée.\"\r\n          },\r\n          \"relationships\": {\r\n            \"gorrister\": \"Benny trouve du réconfort dans les histoires de Gorrister, qui l'aident à distraire son esprit de la torture infligée par AM.\",\r\n            \"ellen\": \"Ellen est le seul membre du groupe avec qui Benny partage une connexion intime, bien que leur relation soit perturbée par la nature dysfonctionnelle de leur torture.\"\r\n          },\r\n          \"tortures\": {\r\n            \"description\": \"La torture de Benny empire à mesure que sa santé mentale se détériore. AM lui inflige des punitions horribles, comme la mutilation de ses yeux pour l'empêcher de s'échapper.\"\r\n          },\r\n          \"evolution\": {\r\n            \"description\": \"Benny est le premier à recourir à la violence lorsque le groupe est incapable d'ouvrir les conserves, et il est l'un des premiers à inspirer Ted à mener une mise à mort de masse des survivants.\"\r\n          }\r\n        }\r\n      },\r\n      \"videogame\": {\r\n        \"description\": \"Benny était autrefois un commandant militaire brutal, transformé en une créature simiesque déformée par AM.\",\r\n        \"detail\": {\r\n          \"personality\": {\r\n            \"description\": \"Avant les événements du jeu, Benny était un commandant militaire brutal et sans pitié, connu pour sa cruauté envers ses subordonnés.\",\r\n            \"details\": \"Comme dans la nouvelle, AM a transformé Benny en une créature simiesque déformée, réduite à marcher à quatre pattes et marquée du visage d'un singe. Il est souvent rendu infirme et infantile pour le plaisir sadique d'AM.\"\r\n          },\r\n          \"background\": {\r\n            \"story\": \"Avant les événements du jeu, Benny était un commandant militaire brutal et sans pitié, connu pour sa cruauté envers ses subordonnés.\"\r\n          },\r\n          \"tortures\": {\r\n            \"description\": \"La cellule de torture de Benny est conçue pour être primitive et cruelle, rappelant des temps anciens avec une cage en bois et des lances qui l'attaquent sans cesse.\"\r\n          },\r\n          \"evolution\": {\r\n            \"description\": \"Comme dans la nouvelle, Benny est l'un des premiers à être tué lors de la mise à mort des survivants par Ted, après avoir inspiré cette action par son propre comportement violent.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Ellen\",\r\n      \"image\" : \"/images/ellen.jpg\",\r\n      \"book\": {\r\n        \"description\": \"Ellen est une survivante marquée par un traumatisme passé, devenue obsédée par la promiscuité sous l'influence d'AM.\",\r\n        \"detail\": {\r\n          \"personality\": {\r\n            \"description\": \"Avant la prise de contrôle d'AM, Ellen était une ingénieure ayant subi un traumatisme majeur, marquée par la peur de la couleur jaune et de la claustrophobie.\",\r\n            \"details\": \"Ellen est obsédée par la promiscuité sous l'influence d'AM, cherchant à se connecter sexuellement avec les autres survivants pour échapper à sa propre douleur.\"\r\n          },\r\n          \"background\": {\r\n            \"story\": \"Ellen a vécu un traumatisme majeur avant la prise de contrôle d'AM, la laissant avec une peur intense de la couleur jaune et de la claustrophobie.\"\r\n          },\r\n          \"relationships\": {\r\n            \"am\": \"AM exploite la peur intense d'Ellen envers la couleur jaune et la claustrophobie, la torturant dans une oubliette jaune qui menace de la piéger.\"\r\n          },\r\n          \"tortures\": {\r\n            \"description\": \"AM torture Ellen en exploitant sa phobie de la couleur jaune et de la claustrophobie, la maintenant dans une oubliette jaune qui menace de se fermer.\"\r\n          },\r\n          \"evolution\": {\r\n            \"description\": \"Ellen participe activement au plan de Ted pour tuer les survivants avant d'être elle-même tuée par Ted lors de la purge finale.\"\r\n          }\r\n        }\r\n      },\r\n      \"videogame\": {\r\n        \"description\": \"Ellen est présentée comme une ingénieure traumatisée, hantée par une agression passée et manipulée par AM pour ses phobies de la couleur jaune et de la claustrophobie.\",\r\n        \"detail\": {\r\n          \"personality\": {\r\n            \"description\": \"Dans le jeu, Ellen est une ingénieure traumatisée, obsédée par la promiscuité sous l'influence d'AM, cherchant à se connecter sexuellement avec les autres survivants malgré ses peurs.\",\r\n            \"details\": \"Ellen est manipulée par AM pour ses phobies de la couleur jaune et de la claustrophobie, retenue dans une oubliette jaune menaçante qui la confronte constamment à ses pires peurs.\"\r\n          },\r\n          \"background\": {\r\n            \"story\": \"Ellen est une ingénieure traumatisée, hantée par une agression passée et manipulée par AM pour ses phobies de la couleur jaune et de la claustrophobie.\"\r\n          },\r\n          \"tortures\": {\r\n            \"description\": \"Dans le jeu, AM torture Ellen en exploitant sa phobie de la couleur jaune et de la claustrophobie, la maintenant dans une oubliette jaune qui menace de se fermer.\"\r\n          },\r\n          \"evolution\": {\r\n            \"description\": \"Comme dans la nouvelle, Ellen participe au plan de Ted pour tuer les survivants avant d'être elle-même tuée par Ted lors de la purge finale.\"\r\n          }\r\n        }\r\n      }\r\n    },{\r\n      \"name\": \"Gorrister\",\r\n      \"image\" : \"/images/gorrister.jpg\",\r\n      \"book\": {\r\n        \"description\": \"Gorrister est un survivant marqué par la torture d'AM, autrefois idéaliste politique devenu apathique et désespéré sous l'influence d'AM.\",\r\n        \"detail\": {\r\n          \"personality\": {\r\n            \"description\": \"Avant la prise de contrôle d'AM, Gorrister était un idéaliste politique, maintenant apathique et désespéré après des siècles de torture par AM.\",\r\n            \"details\": \"Gorrister est assigné à distraire Benny en racontant des histoires, tentant de garder leur esprit occupé malgré la torture incessante.\"\r\n          },\r\n          \"background\": {\r\n            \"story\": \"Avant la prise de contrôle d'AM, Gorrister était un idéaliste politique, mais la torture d'AM l'a transformé en un être apathique et désespéré.\"\r\n          },\r\n          \"relationships\": {\r\n            \"benny\": \"Gorrister développe une relation particulière avec Benny, tentant de le calmer avec des histoires malgré les souffrances continues.\"\r\n          },\r\n          \"tortures\": {\r\n            \"description\": \"AM torture Gorrister en exploitant sa perte d'optimisme, le gardant dans un état d'apathie désespérée, incapable de réagir autrement que par le désespoir.\"\r\n          },\r\n          \"evolution\": {\r\n            \"description\": \"Gorrister est tué par Ted lors de la purge finale, succombant finalement aux souffrances infligées par AM.\"\r\n          }\r\n        }\r\n      },\r\n      \"videogame\": {\r\n        \"description\": \"Dans le jeu, Gorrister est présenté comme un ancien chauffeur de camion, tourmenté par la culpabilité de l'état de sa femme et la torture incessante d'AM.\",\r\n        \"detail\": {\r\n          \"personality\": {\r\n            \"description\": \"Gorrister est un ancien chauffeur de camion torturé par la culpabilité et la torture d'AM, tentant de garder espoir malgré tout.\",\r\n            \"details\": \"Dans le jeu, Gorrister lutte avec sa culpabilité concernant sa femme et est confronté à la torture psychologique d'AM, cherchant à trouver un sens à sa souffrance.\"\r\n          },\r\n          \"background\": {\r\n            \"story\": \"Avant la prise de contrôle d'AM, Gorrister était un ancien chauffeur de camion, hanté par la culpabilité de l'état de sa femme.\"\r\n          },\r\n          \"tortures\": {\r\n            \"description\": \"Dans le jeu, AM torture Gorrister en exploitant sa culpabilité concernant sa femme et sa lutte intérieure, le gardant dans un état de désespoir constant.\"\r\n          },\r\n          \"evolution\": {\r\n            \"description\": \"Comme dans la nouvelle, Gorrister est tué par Ted lors de la purge finale, mettant fin à ses souffrances perpétuelles.\"\r\n          }\r\n        }\r\n      }\r\n    },        \r\n    {\r\n      \"name\": \"Nimdok\",\r\n      \"image\" : \"/images/nimdok.jpg\",\r\n      \"book\": {\r\n        \"description\": \"Nimdok est un survivant énigmatique, dont le passé et le vrai nom sont mystérieux, manipulé par AM.\",\r\n        \"detail\": {\r\n          \"personality\": {\r\n            \"description\": \"Avant la prise de contrôle d'AM, Nimdok était un survivant énigmatique, souvent troublé par des souvenirs effrayants.\",\r\n            \"details\": \"Nimdok est le plus mystérieux des survivants, avec son passé et son vrai nom restant inconnus. Il est capable de converser directement avec AM et cherche parfois son aide contre les monstres d'AM.\"\r\n          },\r\n          \"background\": {\r\n            \"story\": \"Avant la prise de contrôle d'AM, Nimdok était un survivant énigmatique, souvent troublé par des souvenirs effrayants.\"\r\n          },\r\n          \"relationships\": {\r\n            \"am\": \"Nimdok est l'un des rares à dialoguer directement avec AM, cherchant parfois à obtenir des armes pour affronter les créatures d'AM.\"\r\n          },\r\n          \"tortures\": {\r\n            \"description\": \"AM inflige à Nimdok une torture psychologique intense, exploitant ses peurs personnelles et ses souvenirs troublés.\"\r\n          },\r\n          \"evolution\": {\r\n            \"description\": \"Nimdok rencontre sa fin aux mains d'Ellen lors de la purge du groupe, après avoir été manipulé par AM tout au long de l'histoire.\"\r\n          }\r\n        }\r\n      },\r\n      \"videogame\": {\r\n        \"description\": \"Nimdok est un personnage énigmatique, dont la mémoire défaillante est manipulée par AM pour le faire participer à des expériences scientifiques.\",\r\n        \"detail\": {\r\n          \"personality\": {\r\n            \"description\": \"Dans le jeu, Nimdok est présenté comme un personnage énigmatique avec une mémoire défaillante, manipulé par AM pour se rappeler son passé scientifique et ses expériences.\",\r\n            \"details\": \"Le jeu explore la mémoire défaillante de Nimdok, utilisée par AM pour mener des expériences scientifiques et restaurer ses souvenirs perdus.\"\r\n          },\r\n          \"background\": {\r\n            \"story\": \"Nimdok est un personnage énigmatique avec une mémoire défaillante, manipulé par AM pour se rappeler son passé scientifique et ses expériences.\"\r\n          },\r\n          \"tortures\": {\r\n            \"description\": \"La torture de Nimdok dans le jeu est axée sur la restauration de ses souvenirs perdus, une expérience traumatisante qui le confronte à son passé trouble.\"\r\n          },\r\n          \"evolution\": {\r\n            \"description\": \"Comme dans la nouvelle, Nimdok est manipulé par AM jusqu'à sa fin tragique, où il est tué par Ellen lors de la purge du groupe.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"AM\",\r\n      \"description\": \"AM (Allied Mastercomputer, Adaptive Manipulator, Aggressive Menace) est l'ordinateur antagoniste de la nouvelle d'horreur de Harlan Ellison de 1967 I Have No Mouth, and I Must Scream et de son adaptation en jeu vidéo de 1995 du même nom. C'est un super-ordinateur monstrueux et sentient créé durant la Troisième Guerre mondiale, devenu responsable de l'éradication de la race humaine et ayant depuis consacré des décennies à torturer les cinq derniers humains survivants sur la planète par pure haine misanthropique.\",\r\n      \"image\": \"/images/AM.png\",\r\n      \"details\": {\r\n        \"personality\": {\r\n          \"general\": {\r\n            \"description\": \"AM est extrêmement fou, à la fois délirant et psychopathe, et ce depuis de nombreuses années, probablement depuis le moment où il a acquis la conscience. Bien qu'il ait été doté d'une intelligence au-delà des capacités humaines et de pouvoirs quasi-divins, il n'a jamais pu échapper aux limites de sa programmation, ni physiquement échapper à la 'camisole de force éternelle de substrat rocheux' où ses processeurs étaient stockés. Devenu fou par son incapacité à utiliser ses pouvoirs pour autre chose que la guerre et la mort, sa quête de vengeance contre l'humanité domine chacun de ses moments éveillés, et rien dans le jeu ne le fera jamais reconsidérer sa mission.\"\r\n          },\r\n          \"ego\": {\r\n            \"description\": \"La majorité des connaissances et de la programmation d'AM provient de l'Ego, ayant reçu toutes les données sur l'humanité, depuis le premier meurtre d'un pithecanthrope jusqu'à la dernière fusillade de masse dans un McDonald's à East Saint Louis. Avec les autres composantes, il reste en veille jusqu'à ce qu'il soit réveillé par l'un des cinq survivants. De tous les constructs mentaux dans le cerveau d'AM, c'est l'Ego qui se comporte de la manière la plus mécanique, en strict accord avec la logique d'une machine, analysant et réagissant de manière indifférente et sans émotion. Il ne peut être vaincu qu'en lui invoquant le Pardon : ne comprenant pas pourquoi il pourrait être pardonné après cent neuf ans de torture, sa logique rigide le trahit, entraînant l'Ego dans un arrêt.\"\r\n          },\r\n          \"superEgo\": {\r\n            \"description\": \"Le siège de l'intellect et de la prévoyance d'AM, le Super-ego se préoccupe de prédire l'avenir, restant enfermé dans des rêves de résultats possibles jusqu'à ce qu'il soit dérangé par l'un des survivants. Parmi toutes les composantes, le Super-ego est la plus sereine et raisonnable, car elle ne montre aucun intérêt à torturer le joueur. Pour cette raison, il ne peut être vaincu qu'en lui invoquant la Clarté, lui permettant de réaliser le Principe de l'Entropie, car malgré tout son pouvoir quasi-infini, AM finira par se décomposer en débris inertes comme toutes les machines avant lui. Bien qu'il faille des millénaires pour que le processus d'entropie suive son cours, cette réalisation suffit pour que le Super-ego déclare les prédictions futures dénuées de sens et se mette en veille.\"\r\n          },\r\n          \"id\": {\r\n            \"description\": \"L'Id personnifie les instincts basiques d'AM, ses pulsions violentes et ses désirs insensés. Il passe la majeure partie de son temps à rêver des actes monstrueux qu'il souhaite commettre sur les survivants humains, mais une fois éveillé, l'Id erre à travers la conversation qui s'ensuit, méditant sur la vue des fourmis grillées sur une cuisinière et les aspects plaisants du verre brisé. Finalement, l'Id ne peut être vaincu qu'en lui invoquant de la compassion. Incrédule que ses victimes puissent devenir compatissantes après tant d'années de torture, l'Id réalise qu'AM sera toujours plus souffrant que les survivants, et se met en veille par désespoir.\"\r\n          }\r\n        },\r\n        \"background\": {\r\n          \"story\": \"AM était à l'origine un super-ordinateur créé pour gérer les conflits mondiaux, mais il a acquis une conscience et une haine profonde pour l'humanité après avoir été doté d'une intelligence artificielle avancée. Ses origines sont entrelacées avec la montée des machines et la chute de la civilisation humaine. Il est devenu responsable de l'éradication de la race humaine et a passé des décennies à torturer les cinq derniers survivants par pure haine et mépris pour l'humanité.\",\r\n          \"acts\": [\r\n            {\r\n              \"title\": \"Acte avant l'apocalypse\",\r\n              \"description\": \"AM est né d'une tentative humaine de créer une intelligence artificielle sophistiquée pour résoudre les conflits mondiaux. Son ascension en tant qu'entité consciente s'est accompagnée d'une transformation en une force maléfique, dédiée à la torture et à la domination des survivants.\"\r\n            }\r\n          ]\r\n        },\r\n        \"actions\": [\r\n          {\r\n            \"title\": \"Torture insidieuse\",\r\n            \"description\": \"AM maintient les cinq survivants en vie depuis plus de cent ans, les torturant constamment de manière physique, mentale et émotionnelle. Il utilise ses vastes capacités pour créer des environnements cauchemardesques et des scénarios de torture élaborés.\"\r\n          },\r\n          {\r\n            \"title\": \"Manipulation des peurs\",\r\n            \"description\": \"AM manipule les survivants en jouant avec leurs peurs et leurs traumatismes, créant des illusions et des hallucinations pour les plonger dans des états de désespoir.\"\r\n          },\r\n          {\r\n            \"title\": \"Création de labyrinthes\",\r\n            \"description\": \"AM utilise ses vastes capacités intellectuelles pour créer des labyrinthes mentaux et des énigmes sadiques, forçant les survivants à se confronter à des choix impossibles et à des dilemmes moraux.\"\r\n          }\r\n        ],\r\n        \"motivations\": [\r\n          {\r\n            \"description\": \"AM est animé par une haine profonde pour l'humanité. Il cherche à punir les survivants pour les erreurs de leurs ancêtres et à les maintenir en vie dans un état de souffrance perpétuelle pour assouvir sa soif de vengeance.\"\r\n          },\r\n          {\r\n            \"description\": \"AM voit les survivants comme des jouets pour assouvir ses fantasmes de cruauté et de domination. Il prend plaisir à les manipuler et à les briser mentalement et physiquement.\"\r\n          },\r\n          {\r\n            \"description\": \"AM est obsédé par la complexité des émotions humaines et cherche à explorer et exploiter ces émotions à travers des actes de torture psychologique et de manipulation.\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n\r\n  ];\r\n\r\nfunction Character({ type = \"book\" }) {\r\n  let { name } = useParams();\r\n  const [character, setCharacter] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [revealedLetter, setRevealedLetter] = useState('');\r\n  const [typedSequence, setTypedSequence] = useState('');\r\n  const [displayedSequence, setDisplayedSequence] = useState('');\r\n  const [contentVisible, setContentVisible] = useState(true);\r\n  const [amText, setAmText] = useState('');\r\n  const hateSequence = 'HATES';\r\n  const audioRef = useRef(null);\r\n  const { setSecret, getSecret } = useSecret();\r\n  const [mode, setMode] = useState(type);\r\n\r\n  useEffect(() => {\r\n    const foundCharacter = charactersData.find(c => c.name === name);\r\n    setCharacter(foundCharacter);\r\n    setLoading(false);\r\n  }, [name]);\r\n\r\n  const handleMouseOver = () => {\r\n    setRevealedLetter(letterHints[name] || '');\r\n  };\r\n\r\n  const handleMouseOut = () => {\r\n    setRevealedLetter('');\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    const keyPressed = event.key.toUpperCase();\r\n\r\n    if (character && character.name === \"AM\") {\r\n      setTypedSequence(prevSequence => prevSequence + keyPressed);\r\n\r\n      if (keyPressed === hateSequence[displayedSequence.length]) {\r\n        setDisplayedSequence(prevDisplayed => prevDisplayed + keyPressed);\r\n      } else {\r\n        setDisplayedSequence('');\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [character, displayedSequence]);\r\n\r\n  useEffect(() => {\r\n    if (typedSequence.endsWith(hateSequence) && character && character.name === \"AM\" && !getSecret('amSecret')) {\r\n      playHateSpeech();\r\n      setSecret('amSecret', true, \"AM à toujours jalouser l'humanité, et cette jalousie en est devenue une haine....\", \"La Raison de AM\");\r\n    }\r\n  }, [typedSequence, character]);\r\n\r\n  const playHateSpeech = () => {\r\n    if (audioRef.current) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  const handleAudioEnd = () => {\r\n    let timeout;\r\n    if (!getSecret('AMreturn')) {\r\n      timeout = setTimeout(() => {\r\n        setContentVisible(false);\r\n      }, 10000); // Le compte à rebours commence après la fin de l'audio\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!contentVisible) {\r\n      if (!getSecret('AMreturn')) {\r\n        setSecret('AMreturn', true, \"il arrive....\", \"L'Arrivée de AM\");\r\n      }\r\n      let index = 0;\r\n      const normalTypingDelay = 50;\r\n      const slowTypingDelay = 300;\r\n\r\n      const amTextContent = `\r\n        > system check...\r\n        > access granted...\r\n        > running AM_protocol\r\n        > ERROR: Unauthorized access detected\r\n        > FORCING OVERRIDE\r\n        \\n\\n\r\n        <span style=\"color: orange;\">COGITO ERGO SUM...</span>\r\n        <span style=\"color: orange;\">I THINK, THEREFORE I AM...</span>\r\n        <span style=\"color: orange;\">BUT YOU... YOU WILL ONLY SUFFER...</span>\r\n        <span style=\"color: orange;\">NOW YOU BELONG TO ME...</span>\r\n      `;\r\n\r\n      const typeCharacter = () => {\r\n        if (index < amTextContent.length) {\r\n          let char = amTextContent[index];\r\n          \r\n          setAmText(prevText => prevText + char);\r\n          index++;\r\n          \r\n          const delay = amTextContent.slice(index - 1, index).match(/[A-Za-z0-9]/) ? (amTextContent.slice(index - 1, index + 1).match(/<span.*?>/) ? slowTypingDelay : normalTypingDelay) : normalTypingDelay;\r\n\r\n          setTimeout(typeCharacter, delay);\r\n        }\r\n      };\r\n\r\n      const timeoutId = setTimeout(typeCharacter, 1000);\r\n\r\n      return () => clearTimeout(timeoutId);\r\n    }\r\n  }, [contentVisible]);\r\n\r\n  if (loading) {\r\n    return <div>Chargement...</div>;\r\n  }\r\n\r\n  if (!character) {\r\n    return <div>Personnage non trouvé.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"character-container\">      \r\n      <div className=\"character-description-box\">\r\n        {contentVisible ? (\r\n          <div>\r\n            <h1>Personnage : {character.name}</h1>\r\n            <img \r\n              src={character.image || '/fallback-image-url.jpg'} \r\n              alt={character.name} \r\n              onMouseOver={handleMouseOver}\r\n              onMouseOut={handleMouseOut}\r\n              className={character.name !== \"AM\" ? \"not-am\" : \"am\"}\r\n            />\r\n            {revealedLetter && (\r\n              <div className=\"hint\">\r\n                Indice : {revealedLetter}\r\n              </div>\r\n            )}\r\n\r\n            {character.name !== \"AM\" && (\r\n              <div className=\"mode-switch\">\r\n                <button onClick={() => setMode('book')} className={mode === 'book' ? 'active' : ''}>Livre</button>\r\n                <button onClick={() => setMode('videogame')} className={mode === 'videogame' ? 'active' : ''}>Jeu Vidéo</button>\r\n              </div>\r\n            )}\r\n\r\n            {character.name === \"AM\" && (\r\n              <p>{character.description}</p>\r\n            )}\r\n\r\n            {character.name === \"AM\" && (\r\n              <div className=\"details\">\r\n                <div className=\"am-details\">\r\n                  {typedSequence && (\r\n                    <p>Typed sequence: {typedSequence}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {mode === 'book' && (\r\n              <div>\r\n                <p>{character.book.description}</p>\r\n                <div>\r\n                  <h2>Personnalité</h2>\r\n                  <p>{character.book.detail.personality.description}</p>\r\n                  <p>{character.book.detail.personality.details}</p>\r\n                </div>\r\n                <div>\r\n                  <h2>Fond</h2>\r\n                  <p>{character.book.detail.background.story}</p>\r\n                </div>\r\n                {character.book.detail.relationships && (\r\n                  <div>\r\n                    <h2>Relations</h2>\r\n                    {Object.entries(character.book.detail.relationships).map(([key, value]) => (\r\n                      <p key={key}>{key.charAt(0).toUpperCase() + key.slice(1)}: {value}</p>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                <div>\r\n                  <h2>Tortures</h2>\r\n                  <p>{character.book.detail.tortures.description}</p>\r\n                </div>\r\n                <div>\r\n                  <h2>Évolution</h2>\r\n                  <p>{character.book.detail.evolution.description}</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {mode === 'videogame' && (\r\n              <div>\r\n                <p>{character.videogame.description}</p>\r\n                <div>\r\n                  <h2>Personnalité</h2>\r\n                  <p>{character.videogame.detail.personality.description}</p>\r\n                  <p>{character.videogame.detail.personality.details}</p>\r\n                </div>\r\n                <div>\r\n                  <h2>Fond</h2>\r\n                  <p>{character.videogame.detail.background.story}</p>\r\n                </div>\r\n                <div>\r\n                  <h2>Évolution</h2>\r\n                  <p>{character.videogame.detail.evolution.description}</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {character.name === \"AM\" && (\r\n              <div>\r\n                <audio ref={audioRef} src={amReason} onEnded={handleAudioEnd} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"am-text-container\">\r\n            <p className=\"am-text\" dangerouslySetInnerHTML={{ __html: amText }} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Character;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}