{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Desktop\\\\CodeHTML\\\\IHNMAIMS - Site\\\\frontend\\\\src\\\\components\\\\SecretContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// SecretContext.js\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecretContext = /*#__PURE__*/createContext();\nexport const SecretProvider = ({\n  children\n}) => {\n  _s();\n  // Étendre l'état pour inclure deux secrets\n  const [secrets, setSecrets] = useState({\n    secretOne: false,\n    secretTwo: false\n  });\n\n  // Fonction pour mettre à jour un secret spécifique\n  const revealSecret = secretKey => {\n    setSecrets(prevSecrets => ({\n      ...prevSecrets,\n      [secretKey]: true\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(SecretContext.Provider, {\n    value: {\n      secrets,\n      revealSecret,\n      hideSecret\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(SecretProvider, \"CLPDsevsm+0tmwu26FUrZWaijeE=\");\n_c = SecretProvider;\nexport const useSecret = () => {\n  _s2();\n  const context = useContext(SecretContext);\n  if (!context) {\n    throw new Error('useSecret must be used within a SecretProvider');\n  }\n  return context;\n};\n_s2(useSecret, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SecretProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","SecretContext","SecretProvider","children","_s","secrets","setSecrets","secretOne","secretTwo","revealSecret","secretKey","prevSecrets","Provider","value","hideSecret","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSecret","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/louis/Desktop/CodeHTML/IHNMAIMS - Site/frontend/src/components/SecretContext.js"],"sourcesContent":["// SecretContext.js\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\nconst SecretContext = createContext();\r\n\r\nexport const SecretProvider = ({ children }) => {\r\n  // Étendre l'état pour inclure deux secrets\r\n  const [secrets, setSecrets] = useState({\r\n    secretOne: false,\r\n    secretTwo: false,\r\n  });\r\n\r\n  // Fonction pour mettre à jour un secret spécifique\r\n  const revealSecret = (secretKey) => {\r\n    setSecrets((prevSecrets) => ({\r\n      ...prevSecrets,\r\n      [secretKey]: true,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <SecretContext.Provider value={{ secrets, revealSecret, hideSecret }}>\r\n      {children}\r\n    </SecretContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSecret = () => {\r\n  const context = useContext(SecretContext);\r\n  if (!context) {\r\n    throw new Error('useSecret must be used within a SecretProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC;IACrCU,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAIC,SAAS,IAAK;IAClCJ,UAAU,CAAEK,WAAW,KAAM;MAC3B,GAAGA,WAAW;MACd,CAACD,SAAS,GAAG;IACf,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEV,OAAA,CAACC,aAAa,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,OAAO;MAAEI,YAAY;MAAEK;IAAW,CAAE;IAAAX,QAAA,EAClEA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACd,EAAA,CApBWF,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAsB3B,OAAO,MAAMkB,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAGxB,UAAU,CAACG,aAAa,CAAC;EACzC,IAAI,CAACqB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}