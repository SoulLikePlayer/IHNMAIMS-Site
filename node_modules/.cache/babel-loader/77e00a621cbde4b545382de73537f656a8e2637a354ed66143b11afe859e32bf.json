{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Desktop\\\\CodeHTML\\\\IHNMAIMS - Site\\\\frontend\\\\src\\\\components\\\\HackingOverlay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../style/hacking.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HackingOverlay() {\n  _s();\n  const [squares, setSquares] = useState([]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const newSquare = {\n        id: Date.now(),\n        top: Math.random() * 100 + \"vh\",\n        left: Math.random() * 100 + \"vw\",\n        size: Math.random() * 100 + 50 + \"px\" // Taille entre 50px et 150px\n      };\n      setSquares(prevSquares => [...prevSquares, newSquare]);\n\n      // Retirer le carré après une courte période\n      setTimeout(() => {\n        setSquares(prevSquares => prevSquares.filter(square => square.id !== newSquare.id));\n      }, Math.random() * 1500 + 500); // Durée de vie entre 500ms et 2000ms\n    }, 300); // Intervalle de 300ms pour générer un nouveau carré\n\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hacking-overlay\",\n    children: squares.map(square => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hacking-square\",\n      style: {\n        top: square.top,\n        left: square.left,\n        width: square.size,\n        height: square.size\n      }\n    }, square.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(HackingOverlay, \"+I8Xw6B29f1JOxAQNg7JrZQdLMo=\");\n_c = HackingOverlay;\nexport default HackingOverlay;\nvar _c;\n$RefreshReg$(_c, \"HackingOverlay\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","HackingOverlay","_s","squares","setSquares","intervalId","setInterval","newSquare","id","Date","now","top","Math","random","left","size","prevSquares","setTimeout","filter","square","clearInterval","className","children","map","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/louis/Desktop/CodeHTML/IHNMAIMS - Site/frontend/src/components/HackingOverlay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../style/hacking.css\";\r\n\r\nfunction HackingOverlay() {\r\n  const [squares, setSquares] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      const newSquare = {\r\n        id: Date.now(),\r\n        top: Math.random() * 100 + \"vh\",\r\n        left: Math.random() * 100 + \"vw\",\r\n        size: Math.random() * 100 + 50 + \"px\", // Taille entre 50px et 150px\r\n      };\r\n\r\n      setSquares((prevSquares) => [...prevSquares, newSquare]);\r\n\r\n      // Retirer le carré après une courte période\r\n      setTimeout(() => {\r\n        setSquares((prevSquares) =>\r\n          prevSquares.filter((square) => square.id !== newSquare.id)\r\n        );\r\n      }, Math.random() * 1500 + 500); // Durée de vie entre 500ms et 2000ms\r\n    }, 300); // Intervalle de 300ms pour générer un nouveau carré\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"hacking-overlay\">\r\n      {squares.map((square) => (\r\n        <div\r\n          key={square.id}\r\n          className=\"hacking-square\"\r\n          style={{\r\n            top: square.top,\r\n            left: square.left,\r\n            width: square.size,\r\n            height: square.size,\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HackingOverlay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMC,SAAS,GAAG;QAChBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,GAAG,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI;QAC/BC,IAAI,EAAEF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI;QAChCE,IAAI,EAAEH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAE;MACzC,CAAC;MAEDT,UAAU,CAAEY,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAET,SAAS,CAAC,CAAC;;MAExD;MACAU,UAAU,CAAC,MAAM;QACfb,UAAU,CAAEY,WAAW,IACrBA,WAAW,CAACE,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACX,EAAE,KAAKD,SAAS,CAACC,EAAE,CAC3D,CAAC;MACH,CAAC,EAAEI,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;IAClC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET,OAAO,MAAMO,aAAa,CAACf,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKqB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BnB,OAAO,CAACoB,GAAG,CAAEJ,MAAM,iBAClBnB,OAAA;MAEEqB,SAAS,EAAC,gBAAgB;MAC1BG,KAAK,EAAE;QACLb,GAAG,EAAEQ,MAAM,CAACR,GAAG;QACfG,IAAI,EAAEK,MAAM,CAACL,IAAI;QACjBW,KAAK,EAAEN,MAAM,CAACJ,IAAI;QAClBW,MAAM,EAAEP,MAAM,CAACJ;MACjB;IAAE,GAPGI,MAAM,CAACX,EAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQf,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5B,EAAA,CAzCQD,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AA2CvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}