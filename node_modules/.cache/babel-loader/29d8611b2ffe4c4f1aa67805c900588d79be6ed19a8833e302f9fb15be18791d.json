{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louis\\\\Desktop\\\\CodeHTML\\\\IHNMAIMS - Site\\\\frontend\\\\src\\\\components\\\\SecretContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecretContext = /*#__PURE__*/createContext();\nexport const SecretProvider = ({\n  children\n}) => {\n  _s();\n  const [secrets, setSecrets] = useState({\n    amSecret: false\n  });\n  const revelSecret = (secretKey, value) => {\n    setSecrets(prevSecrets => ({\n      ...prevSecrets,\n      [secretKey]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(SecretContext.Provider, {\n    value: {\n      secrets,\n      revelSecret\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(SecretProvider, \"BMmDx4uhB3fdbAm0zs5c/Oo9T/Q=\");\n_c = SecretProvider;\nexport const useSecret = () => {\n  _s2();\n  return useContext(SecretContext);\n};\n_s2(useSecret, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SecretProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","SecretContext","SecretProvider","children","_s","secrets","setSecrets","amSecret","revelSecret","secretKey","value","prevSecrets","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSecret","_s2","$RefreshReg$"],"sources":["C:/Users/louis/Desktop/CodeHTML/IHNMAIMS - Site/frontend/src/components/SecretContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst SecretContext = createContext();\r\n\r\nexport const SecretProvider = ({ children }) => {\r\n  const [secrets, setSecrets] = useState({ amSecret: false });\r\n\r\n  const revelSecret = (secretKey, value) => {\r\n    setSecrets(prevSecrets => ({\r\n      ...prevSecrets,\r\n      [secretKey]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <SecretContext.Provider value={{ secrets, revelSecret }}>\r\n      {children}\r\n    </SecretContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSecret = () => useContext(SecretContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC;IAAEU,QAAQ,EAAE;EAAM,CAAC,CAAC;EAE3D,MAAMC,WAAW,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IACxCJ,UAAU,CAACK,WAAW,KAAK;MACzB,GAAGA,WAAW;MACd,CAACF,SAAS,GAAGC;IACf,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEV,OAAA,CAACC,aAAa,CAACW,QAAQ;IAACF,KAAK,EAAE;MAAEL,OAAO;MAAEG;IAAY,CAAE;IAAAL,QAAA,EACrDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACZ,EAAA,CAfWF,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAiB3B,OAAO,MAAMgB,SAAS,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrB,UAAU,CAACG,aAAa,CAAC;AAAA;AAACkB,GAAA,CAA5CD,SAAS;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}